/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package separar.xmls;

import separar.xmls.types.origen.Regordings;
import separar.xmls.types.origen.Recording;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.dataformat.xml.XmlMapper;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.StringWriter;
import java.net.URL;
import java.time.LocalDate;
import java.time.Month;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.stream.XMLOutputFactory;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamWriter;
import separar.xmls.types.destino.Audio;
import separar.xmls.types.destino.AudioSegment;
import separar.xmls.types.destino.Call;
import separar.xmls.types.destino.Custom_Data;
import separar.xmls.types.destino.Data;

/**
 *
 * @author daniel
 */
public class Vista extends javax.swing.JFrame {

    /**
     * Creates new form Vista
     */
    final JFileChooser fcInput;
    final JFileChooser fcOutput;
    private File file;
    private File directory;
    static XmlMapper xmlMapper = new XmlMapper();
    XMLOutputFactory xmlOutputFactory = XMLOutputFactory.newFactory();

    public Vista() {
        initComponents();
        fcInput = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.xml", "xml");
        fcInput.setFileFilter(filter);

        fcOutput = new JFileChooser();
        fcOutput.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        xmlOutputFactory.setProperty(XMLOutputFactory.IS_REPAIRING_NAMESPACES, new Boolean(true));

        this.setResizable(false);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Input File:");

        jTextField1.setEditable(false);

        jButton1.setText("Abrir Archivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Input Directory:");

        jTextField2.setEditable(false);

        jButton2.setText("Abrir Carpeta");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Convertir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("Audio URL:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jButton2))))
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addGap(326, 326, 326)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int returnVal = fcInput.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fcInput.getSelectedFile();
            //This is where a real application would open the file.
            System.out.println("Opening: " + file.getName() + ".");
            jTextField1.setText(file.getPath());
        } else {
            System.out.println("Open command cancelled by user.");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int returnVal = fcOutput.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            directory = fcOutput.getSelectedFile();
            //This is where a real application would open the file.
            System.out.println("Opening: " + directory.getName() + ".");
            jTextField2.setText(directory.getPath());
        } else {
            System.out.println("Open command cancelled by user.");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        LocalDate localDate = LocalDate.of(2020, Month.AUGUST, 17);
        LocalDate now = LocalDate.now();
        if (now.isBefore(localDate)) {

            try (InputStream inputStream = new FileInputStream(file)) {

                Regordings recordings = xmlMapper.readValue(inputStream, Regordings.class);
                xmlMapper.enable(SerializationFeature.INDENT_OUTPUT);
                for (Recording recording : recordings.getRecording()) {
                    AudioSegment audioSegment = new AudioSegment();
                    audioSegment.setChanelId("0");
                    audioSegment.setRecordingOrder("1");
                    audioSegment.setAudioUrl(jTextField3.getText() + recording.getInfo().getFilename());
                    audioSegment.setStartTime(recording.getInfo().getRecordingDateTime().replaceAll(" ", "T") + "-06:00");
                    audioSegment.setDuration(recording.getInfo().getRecordingLength());

                    Audio audio = new Audio();
                    audio.setAudioSegment(audioSegment);

                    Data data = new Data();
                    data.setAudio(audio);
                    data.setDirection("2");
                    data.setNumberOfHolds("0");
                    data.setNumberOfConferences("0");
                    data.setNumberOfTransfers("0");
                    data.setTotalHoldTime("0");
                    data.setExtension(getOrnull(recording.getInfo().getAgent().replaceAll("[A-Z]", "")));
                    data.setTimeOffset("-300");
                    data.setPbxLoginId(getOrnull(recording.getInfo().getAgent().replaceAll("[A-Z]", "")));
                    data.setSwitchName("Import Manager");
                    data.setAgentName(getOrnull(recording.getInfo().getAgent()));
                    data.setGroupName(getOrnull(recording.getCallData().getService()));
                    data.setAni(getOrnull(recording.getCallData().getCalledParty()));
                    data.setDnis(getOrnull(recording.getCallData().getdNIS()));
                    data.setUniqueIdentifier(getOrnull(recording.getInfo().getRecordingId()));

                    Custom_Data customData = new Custom_Data();
                    customData.setCustomData01(getOrnull(recording.getCallData().getDisposition()));
                    customData.setCustomData02(getOrnull(recording.getUserData().getParameter3()));
                    customData.setCustomData03(getOrnull(recording.getUserData().getParameter1()));
                    customData.setCustomData04(getOrnull(recording.getUserData().getParameter2()));
                    customData.setCustomData05(getOrnull(recording.getCallData().getService()));
                    customData.setCustomData06(getOrnull(recording.getUserData().getParameter9()));
                    customData.setCustomData07(getOrnull(recording.getUserData().getParameter10()));
                    customData.setCustomData08(getOrnull(recording.getUserData().getParameter11()));
                    customData.setCustomData09("");
                    customData.setCustomData10("");
                    customData.setCustomData11("");
                    customData.setCustomData12("");
                    customData.setCustomData13("");
//                    customData.setCustomData14("");
//                    customData.setCustomData15("");
//                    customData.setCustomData16("");
                    customData.setCustomData17("");
                    customData.setCustomData18("");

                    Call call = new Call();
                    call.setData(data);
                    call.setCustomData(customData);

                    try (OutputStream os = new FileOutputStream(new File(directory.getPath() + "/" + recording.getInfo().getFilename().replaceAll(".wav", "") + ".xml"))) {
                        StringBuilder sb = new StringBuilder();
                        sb.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
                        sb.append("\n");
                        sb.append("<Call xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">");
                        sb.append("\n");

                        String dataString = xmlMapper.writeValueAsString(data);
                        String custoDataString = xmlMapper.writeValueAsString(customData);

                        sb.append(dataString);
                        sb.append(custoDataString);

                        sb.append("</Call>");

                        os.write(sb.toString().getBytes());
//                xmlMapper.writeValue(new File(directory.getPath() + "/" + recording.getInfo().getFilename().replaceAll(".wav", "") + ".xml"), call);

                    } catch (Exception ex) {
                        System.out.println("error: " + ex);
                    }

                }
                System.out.println("echo : ");
            } catch (IOException ex) {
                System.out.println("error " + ex.getMessage());
            }

        }

    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista().setVisible(true);
            }
        });
    }

    public String getOrnull(String campo) {
        if (campo == null) {
            return "";
        }
        return campo;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
