/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package taqueria;

import SQL.ConexionMySQL;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author albert
 */
public class reporteTicket extends javax.swing.JFrame {

    /**
     * Creates new form modifArticulo
     */
    public String fecha;
    public float totalVentas = 0.0f;

    public reporteTicket(String fecha) {
        this.setUndecorated(true);
        this.fecha = fecha;
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/Imagenes/LOGO.png")).getImage());
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        TableColumnModel columnModel = jTable1.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(30);
        columnModel.getColumn(1).setPreferredWidth(80);
        columnModel.getColumn(2).setPreferredWidth(50);
        columnModel.getColumn(3).setPreferredWidth(80);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable3.getTableHeader().setReorderingAllowed(false);
        setResizable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Play.png"))); // NOI18N
        jButton2.setText("Imprimir Ticket");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Descripcion", "Cantidad", "Costo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowSorter(new TableRowSorter(jTable1.getModel()));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Tacos");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Sodas");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Descripcion", "Cantidad", "Costo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setRowSorter(new TableRowSorter(jTable2.getModel()));
        jScrollPane2.setViewportView(jTable2);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Paquetes");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Descripcion", "Cantidad", "Costo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setRowSorter(new TableRowSorter(jTable3.getModel()));
        jScrollPane3.setViewportView(jTable3);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("0.00");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Total: $");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Total: $");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("0.00");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Total: $");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("0.00");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Total General: $");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setText("0.00");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Cantidad:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("0");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("0");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Cantidad:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("0");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("Cantidad:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("Mermas");

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Descripcion", "Cantidad", "Costo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.setRowSorter(new TableRowSorter(jTable4.getModel()));
        jScrollPane4.setViewportView(jTable4);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("0");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("Cantidad:");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setText("Gastos");

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Concepto", "Descripcion", "Hora", "Costo $"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable5.setRowSorter(new TableRowSorter(jTable5.getModel()));
        jScrollPane5.setViewportView(jTable5);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel24.setText("Total: $");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setText("0.00");

        jMenu1.setText("Cancelar");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(317, 317, 317)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel17)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel18)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel20)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(86, 86, 86)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel17)
                                .addComponent(jLabel16))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel9)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel20)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel25)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        Ticket a = new Ticket();

        a.AddSubCabecera(a.DarEspacio());
        a.AddSubCabecera("->Reporte de Ventas");
        a.AddSubCabecera(a.DarEspacio());

        a.AddItem("", "", a.DarEspacio());
        a.AddItem("Cant.", "Descripcion", "Importe");
        a.AddItem("", "", a.DarEspacio());

        if (jTable1.getRowCount() > 0) {
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                a.AddItem(jTable1.getValueAt(i, 2).toString() + "  ", rellenaCadena(jTable1.getValueAt(i, 1).toString()), "$" + jTable1.getValueAt(i, 3).toString());
                a.AddItem("", "", a.DarEspacio());
            }
            a.AddItem("--", rellenaCadena("Total Tacos"), "$" + jLabel4.getText());
            a.AddItem("", "", a.DarEspacio());
        }
        if (jTable2.getRowCount() > 0) {
            for (int i = 0; i < jTable2.getRowCount(); i++) {
                a.AddItem(jTable2.getValueAt(i, 2).toString() + "  ", rellenaCadena(jTable2.getValueAt(i, 1).toString()), "$" + jTable2.getValueAt(i, 3).toString());
                a.AddItem("", "", a.DarEspacio());
            }
            a.AddItem("--", rellenaCadena("Total Sodas"), "$" + jLabel7.getText());
            a.AddItem("", "", a.DarEspacio());
        }
        if (jTable3.getRowCount() > 0) {
            for (int i = 0; i < jTable3.getRowCount(); i++) {
                a.AddItem(jTable3.getValueAt(i, 2).toString() + "  ", rellenaCadena(jTable3.getValueAt(i, 1).toString()), "$" + jTable3.getValueAt(i, 3).toString());
                a.AddItem("", "", a.DarEspacio());
            }
            a.AddItem("--", rellenaCadena("Total Paquetes"), "$" + jLabel9.getText());
            a.AddItem("", "", a.DarEspacio());
        }
        if (jTable4.getRowCount() > 0) {
            a.AddItem("", "", a.DarEspacio());
            a.AddItem("--", rellenaCadena("MERMAS"), "---");
            a.AddItem("", "", a.DarEspacio());
            for (int i = 0; i < jTable4.getRowCount(); i++) {
                a.AddItem(jTable4.getValueAt(i, 2).toString() + "  ", rellenaCadena(jTable4.getValueAt(i, 1).toString()), "$" + jTable4.getValueAt(i, 3).toString());
                a.AddItem("", "", a.DarEspacio());
            }
            a.AddItem("--", rellenaCadena("---------------------"), "---");
            a.AddItem("", "", a.DarEspacio());
        }

        if (jTable5.getRowCount() > 0) {
            a.AddItem("", "", a.DarEspacio());
            a.AddItem("--", rellenaCadena("GASTOS"), "---");
            a.AddItem("", "", a.DarEspacio());

            for (int i = 0; i < jTable5.getRowCount(); i++) {
                a.AddItem("", rellenaCadena(jTable5.getValueAt(i, 1).toString()), "$" + jTable5.getValueAt(i, 4).toString());
                a.AddItem("", "", a.DarEspacio());
            }
            a.AddItem("--", rellenaCadena("Total Gastos"), "$" + jLabel25.getText());
            a.AddItem("", "", a.DarEspacio());
        }
        a.AddTotal("TOTAL:         $", jLabel11.getText());
        a.AddTotal("", a.DarEspacio());
        a.AddTotal("", a.DarEspacio());
        a.AddTotal("", a.DarEspacio());

        a.ImprimirDocumento();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked

        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1MouseClicked

    /**
     * @param args the command line arguments
     */
    public void limpiarTabla(JTable a) {

        DefaultTableModel m = (DefaultTableModel) a.getModel();
        for (int i = 0; i < a.getRowCount(); i++) {
            m.removeRow(i);
            i -= 1;
        }
    }

    private String rellenaCadena(String toString) {
        while (toString.length() < 15) {
            toString += ' ';
        }
        if (toString.length() > 15) {
            toString = toString.substring(0, 15);
        }
        return toString;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    // End of variables declaration//GEN-END:variables

    public void cargaVentasTacos() {

        try {

            ConexionMySQL conect = new ConexionMySQL();
            Statement estSQL1,estSQL2;
            ResultSet rs, rs2;
            Connection conn = conect.Conectar();
            String strConsultaSQL2;
            String strConsultaSQL = "select * from menu where categoria='TACOS' and status ='SI'";
            //ejecutar consulta
            estSQL1 = conn.createStatement();
            rs = estSQL1.executeQuery(strConsultaSQL);
            estSQL2 = conn.createStatement();
            int tacosN = 0;
            int totalidad = 0;
            float costo = 0.0f;
            float total = 0.0f;
            DefaultTableModel m = (DefaultTableModel) jTable1.getModel();

            while (rs.next()) {           //Agregar 9 celdas
                strConsultaSQL2 = "select sum(cantidad) as totalidad from detalleventa where idMenu=" + rs.getInt("id") + " and fecha='" + fecha + "' and status!='MERMADO'";
                rs2 = estSQL2.executeQuery(strConsultaSQL2);
                while (rs2.next()) {
                    totalidad = rs2.getInt("totalidad");
                    if (totalidad > 0) {
                        costo = totalidad * rs.getFloat("costo");
                        m.addRow(new Object[]{rs.getString("id"), rs.getString("nombre"), totalidad, costo});
                        tacosN += totalidad;
                        total += costo;
                    }
                }
            }
            jLabel13.setText("" + tacosN);
            jLabel4.setText("" + total);
        } catch (SQLException ex) {
            Logger.getLogger(reporteTicket.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void cargaVentasSodas() {
        try {
            ConexionMySQL conect = new ConexionMySQL();
            Statement estSQL1,estSQL2;
            ResultSet rs, rs2;
            Connection conn = conect.Conectar();
            String strConsultaSQL2;
            String strConsultaSQL = "select * from menu where categoria='FUENTE DE SODAS' and status ='SI'";
            //ejecutar consulta
            
            estSQL1 = conn.createStatement();
            rs = estSQL1.executeQuery(strConsultaSQL);
            estSQL2 = conn.createStatement();
            
            int sodasN = 0;
            int totalidad = 0;
            float costo = 0.0f;
            float total = 0.0f;
            DefaultTableModel m = (DefaultTableModel) jTable2.getModel();

            while (rs.next()) {           //Agregar 9 celdas
                strConsultaSQL2 = "select sum(cantidad) as totalidad from detalleventa where idMenu=" + rs.getInt("id") + " and fecha='" + fecha + "' and status!='MERMADO'";
                rs2 = estSQL2.executeQuery(strConsultaSQL2);
                while (rs2.next()) {
                    totalidad = rs2.getInt("totalidad");
                    if (totalidad > 0) {
                        costo = totalidad * rs.getFloat("costo");
                        m.addRow(new Object[]{rs.getString("id"), rs.getString("nombre"), totalidad, costo});
                        sodasN += totalidad;
                        total += costo;
                    }
                }
            }
            jLabel14.setText("" + sodasN);
            jLabel7.setText("" + total);
            
        } catch (SQLException ex) {
            Logger.getLogger(reporteTicket.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void cargaVentasPaquetes() {
        try {

            ConexionMySQL conect = new ConexionMySQL();
            Statement estSQL1,estSQL2;
            ResultSet rs, rs2;
            Connection conn = conect.Conectar();
            String strConsultaSQL2;
            String strConsultaSQL = "select * from menu where categoria='PAQUETE' and status ='SI'";
            //ejecutar consulta
            estSQL1 = conn.createStatement();
            rs = estSQL1.executeQuery(strConsultaSQL);
            estSQL2 = conn.createStatement();
            
            int paqueteN = 0;
            int totalidad = 0;
            float costo = 0.0f;
            float total = 0.0f;
            DefaultTableModel m = (DefaultTableModel) jTable3.getModel();

            while (rs.next()) {           //Agregar 9 celdas
                strConsultaSQL2 = "select sum(cantidad) as totalidad from detalleventa where idMenu=" + rs.getInt("id") + " and fecha='" + fecha + "' and status!='MERMADO'";
                rs2 = estSQL2.executeQuery(strConsultaSQL2);
                while (rs2.next()) {
                    totalidad = rs2.getInt("totalidad");
                    if (totalidad > 0) {
                        costo = totalidad * rs.getFloat("costo");
                        m.addRow(new Object[]{rs.getString("id"), rs.getString("nombre"), totalidad, costo});
                        paqueteN += totalidad;
                        total += costo;
                    }
                }
            }
            jLabel16.setText("" + paqueteN);
            jLabel9.setText("" + total);
        } catch (SQLException ex) {
            Logger.getLogger(reporteTicket.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void cargaMermas() {
        try {

            ConexionMySQL conect = new ConexionMySQL();
            ConexionMySQL conect2 = new ConexionMySQL();
            ResultSet rs, rs2;
            String strConsultaSQL2;
            String strConsultaSQL = "select * from menu where status ='SI'";
            //ejecutar consulta
            rs = conect.Consulta(strConsultaSQL);
            int mermasN = 0;
            int totalidad = 0;
            float costo = 0.0f;
            float total = 0.0f;
            DefaultTableModel m = (DefaultTableModel) jTable4.getModel();

            while (rs.next()) {           //Agregar 9 celdas
                strConsultaSQL2 = "select sum(cantidad) as totalidad from detalleventa where idMenu=" + rs.getInt("id") + " and fecha='" + fecha + "' and status='MERMADO'";
                rs2 = conect2.Consulta(strConsultaSQL2);
                while (rs2.next()) {
                    totalidad = rs2.getInt("totalidad");
                    if (totalidad > 0) {
                        costo = totalidad * rs.getFloat("costo");
                        m.addRow(new Object[]{rs.getString("id"), rs.getString("nombre"), totalidad, costo});
                        mermasN += totalidad;

                    }
                }
            }
            jLabel19.setText("" + mermasN);
        } catch (SQLException ex) {
            Logger.getLogger(reporteTicket.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void cargarGastos() {

        String strConsultaSQL = "select * from gastos where fecha ='" + fecha + "'";
        //ejecutar consulta

        try {
            ConexionMySQL conect = new ConexionMySQL();
            ResultSet rs;

            rs = conect.Consulta(strConsultaSQL);
            float total = 0.0f;
            DefaultTableModel m = (DefaultTableModel) jTable5.getModel();

            while (rs.next()) {           //Agregar 9 celdas
                m.addRow(new Object[]{rs.getString("id"), rs.getString("concepto"), rs.getString("detalles"), rs.getString("hora"), rs.getFloat("costo")});
                total += rs.getFloat("costo");
            }

            jLabel25.setText("" + total);
            //Cerrar los objetos de manejo de BD
            //Connection
            //Fin de if que comprueba si se pudo conectar
        } catch (Exception e) {
            System.out.println("Excepcion al ejecutar CONSULTA!!!");
            //Mostrar la traza de la pila
            e.printStackTrace();
        }
    }

    public void calcularTotales() {
        float totTacos = Float.parseFloat(jLabel4.getText());
        float totSodas = Float.parseFloat(jLabel7.getText());
        float totPaquetes = Float.parseFloat(jLabel9.getText());
        float totGastos = Float.parseFloat(jLabel25.getText());
        float total = totTacos + totSodas + totPaquetes - totGastos;
        jLabel11.setText(String.format("%.2f", total));
    }
}
