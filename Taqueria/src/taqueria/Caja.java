/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package taqueria;

import SQL.ConexionMySQL;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.InputEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import org.jvnet.substance.SubstanceLegacyDefaultLookAndFeel;

/**
 *
 * @author el dios
 */
public class Caja extends javax.swing.JFrame {

    /**
     * Creates new form Caja
     */
    public static Control mesa1;
    public static SocketServidor server;
    public static ServidorTablets servertab;
    public static ArrayList<mesa> mesas;
    public static String usr;
    public static int numeroMesas;

    public Caja() {
        this.usr = "cajero";
        initComponents();
        //cargarprod();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        server = new SocketServidor();
        server.start();
        this.setDefaultCloseOperation(0);
        setExtendedState(6);
        initBase();

    }

    public Caja(String usr) {

        this.usr = usr;
        this.setUndecorated(true);

        initComponents();
        //setExtendedState(6);
        this.setResizable(false);
        initBase();
        initServidores();
        setLocationRelativeTo(null);

        this.setDefaultCloseOperation(0);
        setExtendedState(6);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu12 = new javax.swing.JMenu();
        jMenuItem21 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1006, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 593, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Mesas", jPanel1);

        jLabel1.setText("Habilitar impresion de Ticket:");

        jCheckBox1.setSelected(true);

        jMenu1.setText("Archivo");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jMenuItem1.setText("Actualizar Mesas");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jMenuItem4.setText("Salir");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Productos");
        jMenu2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jMenu5.setText("Productos");
        jMenu5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jMenuItem2.setText("Nuevo");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem3.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jMenuItem3.setText("Modificar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem3);

        jMenu2.add(jMenu5);

        jMenu6.setText("Productos Empaquetados");
        jMenu6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jMenuItem5.setText("Nuevo");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem6.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jMenuItem6.setText("Modificar");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem6);

        jMenu2.add(jMenu6);

        jMenu7.setText("Menus");
        jMenu7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jMenuItem7.setText("Nuevo");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem7);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem8.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jMenuItem8.setText("Modificar");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem8);

        jMenu2.add(jMenu7);

        jMenuBar1.add(jMenu2);

        jMenu12.setText("Gastos");
        jMenu12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jMenuItem21.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jMenuItem21.setText("Ingresar Gasto");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        jMenu12.add(jMenuItem21);

        jMenuBar1.add(jMenu12);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jCheckBox1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

getOcupadas();

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed

        new NuevoProducto().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

        new modiProd().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed

        new NuevoProductoEmpaquetado().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed

        new modiProdEmpaquetados().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed

        new NuevoMenu().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed

        new modiMenu().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed

        new gastos().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        System.exit(0);
// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Caja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Caja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Caja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Caja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {

                    /////SubstanceLegacyDefaultLookAndFeel()
                    /////SubstanceOfficeBlue2007LookAndFeel
                    UIManager.setLookAndFeel(new SubstanceLegacyDefaultLookAndFeel());
                } catch (Exception e) {
                    System.out.println("Substance Raven Graphite failed to initialize");
                }
                new Caja().setVisible(true);
            }
        });
    }

    public static void desocupaMesa(String maq) {

        for (int i = 0; i < mesas.size(); i++) {
            mesas.get(i).desocupar(maq);
        }

    }

    public static void cambioMesa(String mesaDest) {
        for (int i = 0; i < mesas.size(); i++) {
            mesas.get(i).cargaOcupada(mesaDest);
        }
    }

    public static boolean Disponibilidad(String maqu) {
        boolean a = false;
        for (int i = 0; i < mesas.size(); i++) {
            if (mesas.get(i).disponibilidad(maqu)) {
                return true;
            }
        }
        return a;
    }

    public void initBase() {

        numeroMesas = getMesasN();
        int div = 0;
        if (numeroMesas <= 6) {
            div = 5;
        } else if (numeroMesas <= 20) {
            div = 15;
        } else {
            div = 25;
        }

        float anchoicono = div * 200 / (numeroMesas);
        mesas = new ArrayList<>();

        for (int i = 1; i < (numeroMesas + 1); i++) {
            try {
                ImageIcon icon1 = new javax.swing.ImageIcon("Imagenes/mes" + i + ".PNG");
                mesas.add(new mesa(icon1, "Mesa" + i));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex);
            }
        }

        ImageIcon icon = new javax.swing.ImageIcon("Imagenes/LOGO.PNG");
        mesas.add(new mesa(icon, "P/Llevar"));

        jPanel1.setLayout(new GridLayout(5, 5, 5, 5));
        for (int i = 0; i < mesas.size(); i++) {

            jPanel1.add(mesas.get(i).boton);
            mesas.get(i).boton.setBounds(180, 25, 170, 100);
            mesas.get(i).redimencionarIcono((int) anchoicono);
            this.repaint();

        }

        getOcupadas();

    }

    public void getOcupadas() {

        ConexionMySQL conect = new ConexionMySQL();
        String consulta = "select * from venta where status='Ocupado'";
        ResultSet rs = conect.Consulta(consulta);
        try {
            while (rs.next()) {
                for (int i = 0; i < mesas.size(); i++) {
                    mesas.get(i).cargaOcupada(rs.getString("nMesa"));
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    public static void cargaOcupadaConNombre(String nombre) {
        mesas.get(Integer.parseInt(nombre.substring(4)) - 1).cargaOcupada(nombre);
    }

    public static void finalizarVentaConNombre(String nombre) {
        mesas.get(Integer.parseInt(nombre.substring(4)) - 1).finalizarVenta();
    }

    public String getHora() {

        String hora = "";
        Calendar fecha = new GregorianCalendar();
        int anio = fecha.get(Calendar.YEAR);
        int mes = fecha.get(Calendar.MONTH) + 1;
        int dia = fecha.get(Calendar.DAY_OF_MONTH);
        int horas = fecha.get(Calendar.HOUR);
        int min = fecha.get(Calendar.MINUTE);
        if (horas < 10) {
            hora = "0" + horas + ":";
        } else {
            hora = horas + ":";
        }
        if (min < 10) {
            hora = hora + "0" + min + ":00";
        } else {
            hora = hora + min + ":00";
        }

        return hora;
    }

    public String GetFecha() {

        Calendar fecha = new GregorianCalendar();
        int anio = fecha.get(Calendar.YEAR);
        int mes = fecha.get(Calendar.MONTH) + 1;
        int dia = fecha.get(Calendar.DAY_OF_MONTH);
        int horas = fecha.get(Calendar.HOUR);
        int min = fecha.get(Calendar.MINUTE);
        String fech = anio + "-" + mes + "-" + dia;

        return fech;

    }

    public void imprimirTicketAcces() {
        /*Ticket a = new Ticket();

         a.AddItem("", "", a.DarEspacio());

         a.AddItem(jTCant.getText(), jNombre.getText(), jTotal.getText());
         a.AddItem("", "", a.DarEspacio());


         a.AddTotal("TOTAL: $", jTotal.getText());
         a.AddTotal("", a.DarEspacio());
         a.AddTotal("", a.DarEspacio());
         a.AddTotal("", a.DarEspacio());


         a.ImprimirDocumento();
         */
    }

    public int getMesasN() {
        int n = 25;
        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;
        try {
            archivo = new File("numMaq.txt");
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);

            // Lectura del fichero
            String linea;
            while ((linea = br.readLine()) != null) {

                n = Integer.parseInt(linea);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se encuentra el archivo de numero de mesas ");
            //System.exit(0);

        } finally {
            // En el finally cerramos el fichero, para asegurarnos
            // que se cierra tanto si todo va bien como si salta 
            // una excepcion.
            try {
                if (null != fr) {
                    fr.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
        return n;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu12;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    private void initServidores() {
        server = new SocketServidor();
        server.start();
        servertab = new ServidorTablets();
        servertab.start();
    }
}
/////////codigo de cada mesa
/*

 if (Num1.getText().equals("Disponible")) {
 int confirmado = JOptionPane.showConfirmDialog(
 this,
 "Deceas Abrir Esta Mesa????");

 if (JOptionPane.OK_OPTION == confirmado) {
 Num1.setText("Ocupado");
 Num1.setForeground(Color.red);
 m1.setBackground(Color.red);
 mesa1.nuevaRenta(usr);
 //System.out.println("confirmado");
 } else {
 System.out.println("vale... no borro nada...");
 }
 } else {
 mesa1.setVisible(true);
 setExtendedState(0);
 }
 */

class mesa implements ActionListener {

    JButton boton;
    JLabel etiqueta;
    ImageIcon icono;
    String mesa;
    Control con;
    JPopupMenu menucontextual;

    mesa(ImageIcon icono, String mesa) {
        this.icono = icono;
        this.mesa = mesa;
        boton = new JButton();
        etiqueta = new JLabel("Disponible");
        con = new Control(icono, mesa);
        boton.setBackground(Color.orange);
        boton.addActionListener(this);
        menucontextual = new JPopupMenu();
        JMenuItem item = new JMenuItem("Reimprimir Ticket");
        JMenuItem item2 = new JMenuItem("Reabrir mesa");
        JMenuItem item3 = new JMenuItem("Cancelar");

        item.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                menucontextual.setVisible(false);
                con.imprimirTicket();
            }
        });
        item2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                menucontextual.setVisible(false);
                con.reAbrirMesa();
            }
        });
        item3.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                menucontextual.setVisible(false);
            }
        });
        menucontextual.add(item);
        menucontextual.add(item2);
        menucontextual.add(item3);
        MouseListener ml = new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent me) {
                if ((me.getModifiers() & InputEvent.BUTTON1_MASK) == InputEvent.BUTTON1_MASK) {
                    //System.out.println("Click con el botón izdo");
                    menucontextual.setVisible(false);

                } else {
                    //System.out.println("Click con el botón dcho");
                    menucontextual.setVisible(true);
                    menucontextual.setLocation(me.getLocationOnScreen());

                }
            }

            @Override
            public void mousePressed(MouseEvent me) {

            }

            @Override
            public void mouseReleased(MouseEvent me) {

            }

            @Override
            public void mouseEntered(MouseEvent me) {

            }

            @Override
            public void mouseExited(MouseEvent me) {

            }
        };
        boton.addMouseListener(ml);
    }

    public void redimencionarIcono(int ancho) {
        icono = new ImageIcon(icono.getImage().getScaledInstance(ancho, -1, Image.SCALE_DEFAULT));
        boton.setIcon(icono);
    }

    public void desocupar(String num) {
        if (mesa.equals(num)) {
            etiqueta.setText("Disponible");
            boton.setBackground(Color.orange);
        }
    }

    public void finalizarVenta() {
        con.actualizaDatos();
        con.finalizarVenta();
    }

    public boolean disponibilidad(String num) {
        if (mesa.equals(num)) {
            if (etiqueta.getText().equals("Ocupado")) {
                return true;
            }
        }
        return false;
    }

    public void cargaOcupada(String mesa) {
        if (this.mesa.equals(mesa)) {
            etiqueta.setText("Ocupado");
            boton.setBackground(new Color(150, 38, 180));
            con.CargarCuenta();
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) {

        if (etiqueta.getText().equals("Disponible")) {
            int confirmado = JOptionPane.showConfirmDialog(
                    null,
                    "Deceas Abrir Esta Mesa????");

            if (JOptionPane.OK_OPTION == confirmado) {
                etiqueta.setText("Ocupado");
                boton.setBackground(new Color(150, 38, 180));

                con.nuevaRenta(Caja.usr);
                hiloServidor.actualizarDispostivos("0<" + hiloServidor.MesasOcupadas());
                //System.out.println("confirmado");
            }
        } else {
            con.actualizaDatos();
            con.setVisible(true);
            //setExtendedState(0);
        }
    }
}
