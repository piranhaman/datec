/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package almacencontrol;

import SQL.ConexionMySQL;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author el dios
 */
public class Servicio extends javax.swing.JFrame {

    /**
     * Creates new form Servicio
     */
    public String codigo;
    public static float total;
    agregProVenta buscador;

    public Servicio() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/Imagenes/LOGO.png")).getImage());
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setResizable(false);
        setLocationRelativeTo(null);
        getOperadores();
        jLabel11.setText("" + principalAlmacen.nServicio);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Servicio");

        jLabel2.setText("No. Solicitud:");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jLabel3.setText("Servicio:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Caja", "Tracto" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel4.setText("Unidad:");

        jLabel5.setText("No.:");

        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Marco", "Humberto", "Hemiliano" }));

        jLabel6.setText("Realizo:");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/agregar.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel7.setText("Refaccion:");

        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar.png"))); // NOI18N
        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Refaccion", "PU", "Cantidad", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel8.setText("Total: $");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("0.00");

        jLabel10.setText("Km:");

        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField5.setText("0");
        jTextField5.setEnabled(false);
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField5KeyTyped(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ACEPTAR.png"))); // NOI18N
        jButton3.setText("Terminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel11.setText("1");

        jLabel12.setText("N.P.:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField3))
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addContainerGap(61, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        buscador = new agregProVenta();
        buscador.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyReleased

        char d = evt.getKeyChar();
        int d2 = evt.getKeyChar();
        if (d2 == 10 || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            codigo = jTextField4.getText();
            if (codigo.length() > 0) {
                agregarConCodigo(codigo);
            }
            codigo = "";
            jTextField4.setText("");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4KeyReleased

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped

        int d2 = evt.getKeyChar();
        if ((d2 > 47 && d2 < 91) || ((d2 > 96 && d2 < 123))) {

        } else {
            evt.consume();
        }

// TODO add your handling code here:
    }//GEN-LAST:event_jTextField4KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //limpiarTabla(jTable1);
        DefaultTableModel m2 = (DefaultTableModel) jTable1.getModel();
        String n = jComboBox2.getSelectedItem().toString();
        m2.addRow(new Object[]{getIdMec(n), n});

// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        guardaServicio();
        

// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped

        int d2 = evt.getKeyChar();
        if ((d2 > 47 && d2 < 58)) {

        } else {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jTextField5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyTyped

        int d2 = evt.getKeyChar();
        if ((d2 > 47 && d2 < 58)) {

        } else {
            evt.consume();
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jTextField5KeyTyped

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged

        String pago = jComboBox1.getSelectedItem().toString();
        if(pago.equals("Caja"))
            jTextField5.setEnabled(false);
        else
            jTextField5.setEnabled(true);
// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped

        
        char caracter = evt.getKeyChar();
        if (caracter < '0' || caracter > '9') {
            evt.consume();
        }// TODO add your handling code here:
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        
        if((evt.getModifiers() & InputEvent.BUTTON1_MASK) == InputEvent.BUTTON1_MASK){
            
        }else{
           try{
            int i = jTable2.getSelectedRow();
            DefaultTableModel m = (DefaultTableModel) jTable2.getModel();
            m.removeRow(i);
           }catch(Exception e){
           
           }
           calcular();
        }
        
// TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        if((evt.getModifiers() & InputEvent.BUTTON1_MASK) == InputEvent.BUTTON1_MASK){
            
        }else{
           try{
            int i = jTable1.getSelectedRow();
            DefaultTableModel m = (DefaultTableModel) jTable1.getModel();
            m.removeRow(i);
           }catch(Exception e){
           
           }
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Servicio().setVisible(true);
            }
        });
    }

    public void guardaServicio() {
        if (!camposVacios()) {
            JOptionPane.showMessageDialog(rootPane, "Faltan datos");
        } else {
            int op = JOptionPane.showInternalConfirmDialog(super.getContentPane(), "Deceas Guardar el Servicio?");
            if (op == JOptionPane.OK_OPTION) {
                String Fecha = principalAlmacen.GetFecha();
                String Hora = principalAlmacen.getHora();
                int idventa = Integer.parseInt(jLabel11.getText());
                ConexionMySQL mysql = new ConexionMySQL();
                Connection cn = mysql.Conectar();
                PreparedStatement pst;
                PreparedStatement pst2;
                PreparedStatement pst3;
                String sSQL = "";
                String mensaje = "";
                String cTr = jComboBox1.getSelectedItem().toString();
                int nCTr = Integer.parseInt(jTextField3.getText());
                int nSol = Integer.parseInt(jTextField1.getText());
                int idProd = 0, cant = 0, idusuario = principalAlmacen.usr;
                int kilo = Integer.parseInt(jTextField5.getText());
                float costo = 0, tot = Float.parseFloat(jLabel9.getText());
                int idMec=0;
                int errores = 1;
                String descrip = jTextField2.getText();

                /*
                 idUsr int,
                 fecha date,
                 hora time,
                 concepto varchar(500),
                 solicitud int,
                 CaTra varchar(20),
                 nCaTra int,
                 total numeric(8,2),
                 kilo int,
                 */
                sSQL = "INSERT INTO  servicio (idUsr, fecha, hora, concepto, solicitud, CaTra, nCaTra, total, kilo)"
                        + "VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)";

                try {
                    pst = cn.prepareStatement(sSQL);

                    pst.setInt(1, idusuario);
                    pst.setString(2, Fecha);
                    pst.setString(3, Hora);
                    pst.setString(4, descrip);
                    pst.setInt(5, nSol);
                    pst.setString(6, cTr);
                    pst.setInt(7, nCTr);
                    pst.setFloat(8, tot);
                    pst.setInt(9, kilo);
                    int n = pst.executeUpdate();
                    if (n > 0) {
                        errores = 0;
                    }

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
                if (errores == 0) {
                    errores = 1;
                    sSQL = "INSERT INTO  consumo (idServ,idRef, cantidad, pu, costo)"
                            + "VALUES(?, ?, ?, ?, ?)";
                    mensaje = "Servicio Guardado con Exito!!!";

                    DefaultTableModel m = (DefaultTableModel) jTable2.getModel();

                    for (int i = 0; i < m.getRowCount(); i++) {

                        idProd = getIdProd(m.getValueAt(i, 0).toString());
                        cant = Integer.parseInt(m.getValueAt(i, 3).toString());
                        costo = Float.parseFloat(m.getValueAt(i, 2).toString());
                        tot = Float.parseFloat(m.getValueAt(i, 4).toString());

                        try {
                            pst2 = cn.prepareStatement(sSQL);

                            pst2.setInt(1, idventa);
                            pst2.setInt(2, idProd);
                            pst2.setInt(3, cant);
                            pst2.setFloat(4, costo);
                            pst2.setFloat(5, tot);
                            int n = pst2.executeUpdate();
                            if (n > 0) {
                                errores = 0;
                            }
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, ex);
                        }

                    }

                }
                if(errores ==0){
                    errores = 1;
                    sSQL = "INSERT INTO  mantenimiento (idServ,idMec)"
                            + "VALUES(?, ?)";
                    mensaje = "Servicio Guardado con Exito!!!";

                    DefaultTableModel m2 = (DefaultTableModel) jTable1.getModel();

                    for (int i = 0; i < m2.getRowCount(); i++) {

                        idMec = Integer.parseInt(m2.getValueAt(i, 0).toString());
                        try {
                            pst3 = cn.prepareStatement(sSQL);

                            pst3.setInt(1, idventa);
                            pst3.setInt(2, idMec);
                            
                            int n = pst3.executeUpdate();
                            if (n > 0) {
                                errores = 0;
                            }
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, ex);
                        }

                    }
                }
                if (errores == 0) {
                    JOptionPane.showMessageDialog(this, mensaje);
                    jLabel11.setText(""+principalAlmacen.getNServicio());
                    this.dispose();
                }
            }//if joptionpane =acept
        }//else del if filas==0
    }

    public boolean camposVacios() {
        boolean a = true;
        if (jTextField1.getText().length() < 1) {
            return false;
        }
        if (jTextField2.getText().length() < 1) {
            return false;
        }
        if (jTextField3.getText().length() < 1) {
            return false;
        }
        if (jTextField5.getText().length() < 1) {
            return false;
        }
        if (jTable1.getRowCount() == 0) {
            return false;
        }
        if (jTable2.getRowCount() == 0) {
            return false;
        }
        return a;
    }

    public int getIdMec(String nombre) {
        int id = 0;

        ConexionMySQL conect = new ConexionMySQL();
        String consulta = "select * from operador where nombre='" + nombre + "'";
        ResultSet rs = conect.Consulta(consulta);
        try {
            while (rs.next()) {
                id = rs.getInt("id");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Error al cargar Servicio!!! \n" + ex);
        }

        return id;
    }

    public int getIdProd(String code) {
        int id = 0;

        ConexionMySQL conect = new ConexionMySQL();
        String consulta = "select * from refacciones where codigo='" + code + "'";
        ResultSet rs = conect.Consulta(consulta);
        try {
            while (rs.next()) {
                id = rs.getInt("id");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Error al cargar proovedores!!!");
        }

        return id;
    }

    public static void getOperadores() {

        jComboBox2.removeAllItems();
        ConexionMySQL conect = new ConexionMySQL();
        String consulta = "select * from operador";
        ResultSet rs = conect.Consulta(consulta);
        try {
            while (rs.next()) {
                jComboBox2.addItem(rs.getString("nombre"));
            }

        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(rootPane, "Error al cargar Clientes!!!");
        }

    }

    public void agregarConCodigo(String cod) {

        ConexionMySQL conect = new ConexionMySQL();
        String consulta = "select * from refacciones where codigo = '" + cod + "'";
        ResultSet rs = conect.Consulta(consulta);
        int co = 0, a = 1;
        try {
            while (rs.next()) {

                DefaultTableModel m = (DefaultTableModel) jTable2.getModel();
                codigo = cod;
                String descripcion = rs.getString("nombre");

                float precio = rs.getFloat("pu");
                //m.addRow(new Object[]{rs.getString("codigoProd"), rs.getString("descripcion"), rs.getString("talla"), rs.getString("color"), rs.getInt("existencia"), rs.getFloat("precioVenta"), (float) (rs.getFloat("precioVenta") + ((rs.getFloat("precioVenta")) * porCredito))});
                int dup = duplicado(cod);
                if (dup == -1) {
                    m.addRow(new Object[]{codigo, descripcion, precio, a, (a * precio)});
                } else {
                    m.setValueAt((Integer.parseInt(m.getValueAt(dup, 3).toString()) + 1), dup, 3);
                }
                co++;
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error en busqueda de Producto!!!  " + ex);
        }
        if (co == 0) {
            JOptionPane.showMessageDialog(this, "Producto no encontrado");
            new productoNuevo().setVisible(true);
        }

        Servicio.calcular();

    }

    public static void calcular() {
        DefaultTableModel m = (DefaultTableModel) jTable2.getModel();
        int filas = jTable2.getRowCount();
        total = 0;
        for (int i = 0; i < filas; i++) {
            float pr = (Integer.parseInt(m.getValueAt(i, 3).toString())) * (Float.parseFloat(m.getValueAt(i, 2).toString()));
            m.setValueAt(pr, i, 4);
            total += pr;
        }
        jLabel9.setText(String.format("%.2f", total));
    }

    public int duplicado(String cod) {
        int a = -1;
        DefaultTableModel m = (DefaultTableModel) jTable2.getModel();
        for (int i = 0; i < jTable2.getRowCount(); i++) {
            if (m.getValueAt(i, 0).toString().equals(cod)) {
                a = i;
            }
        }
        return a;
    }

    public void limpiarTabla(JTable a) {

        DefaultTableModel m = (DefaultTableModel) a.getModel();
        for (int i = 0; i < a.getRowCount(); i++) {
            m.removeRow(i);
            i -= 1;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    public static javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    public static javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    public static javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
